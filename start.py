#!/usr/bin/env python3
"""
๐ MPSYSTEM Backend Launcher - ะัะพััะพะน ะทะฐะฟััะบ ะพะดะฝะธะผ ะบะปะธะบะพะผ!

ะญัะพั ัะบัะธะฟั ะทะฐะฟััะบะฐะตั FastAPI backend ัะตัะฒะตั ั ะฐะฒัะพะผะฐัะธัะตัะบะพะน:
- ะัะพะฒะตัะบะพะน ะทะฐะฒะธัะธะผะพััะตะน
- ะะฝะธัะธะฐะปะธะทะฐัะธะตะน ะฑะฐะทั ะดะฐะฝะฝัั
- ะกะพะทะดะฐะฝะธะตะผ ัะตััะพะฒัั ะดะฐะฝะฝัั
- ะะฐะฟััะบะพะผ ัะตัะฒะตัะฐ

ะัะฟะพะปัะทะพะฒะฐะฝะธะต:
    python start.py
    ะธะปะธ
    python3 start.py
"""

import os
import sys
import subprocess
import logging
from pathlib import Path

# ะะฐัััะพะนะบะฐ ะปะพะณะธัะพะฒะฐะฝะธั
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def print_banner():
    """ะะตัะฐัะฐะตะผ ะบัะฐัะธะฒัะน ะฑะฐะฝะฝะตั"""
    banner = """
    โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    โ                    ๐ญ MPSYSTEM ERP BACKEND                    โ
    โ                     ะัะพััะพะน ะทะฐะฟััะบ ัะตัะฒะตัะฐ                    โ
    โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    """
    print(banner)

def check_python_version():
    """ะัะพะฒะตััะตะผ ะฒะตััะธั Python"""
    if sys.version_info < (3, 8):
        logger.error("โ ะขัะตะฑัะตััั Python 3.8 ะธะปะธ ะฒััะต!")
        logger.error(f"   ะขะตะบััะฐั ะฒะตััะธั: {sys.version}")
        sys.exit(1)
    
    logger.info(f"โ Python ะฒะตััะธั: {sys.version.split()[0]}")

def check_backend_directory():
    """ะัะพะฒะตััะตะผ ััะพ ัััะตััะฒัะตั ะฟะฐะฟะบะฐ backend"""
    backend_dir = Path('backend')
    if not backend_dir.exists():
        logger.error("โ ะะฐะฟะบะฐ 'backend' ะฝะต ะฝะฐะนะดะตะฝะฐ!")
        logger.error("   ะฃะฑะตะดะธัะตัั ััะพ ะทะฐะฟััะบะฐะตัะต ัะบัะธะฟั ะธะท ะบะพัะฝั ะฟัะพะตะบัะฐ")
        sys.exit(1)
    
    src_dir = backend_dir / 'src'
    if not src_dir.exists():
        logger.error("โ ะะฐะฟะบะฐ 'backend/src' ะฝะต ะฝะฐะนะดะตะฝะฐ!")
        sys.exit(1)
    
    logger.info("โ ะกัััะบัััะฐ backend ะฝะฐะนะดะตะฝะฐ")

def install_dependencies():
    """ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ"""
    requirements_file = Path('backend/requirements.txt')
    
    if not requirements_file.exists():
        logger.error("โ ะคะฐะนะป backend/requirements.txt ะฝะต ะฝะฐะนะดะตะฝ!")
        sys.exit(1)
    
    logger.info("๐ฆ ะัะพะฒะตััะตะผ ะธ ัััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ...")
    
    try:
        # ะัะพะฒะตััะตะผ ััะพ pip ะดะพัััะฟะตะฝ
        subprocess.run([sys.executable, '-m', 'pip', '--version'], 
                      check=True, capture_output=True)
        
        # ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ
        result = subprocess.run([
            sys.executable, '-m', 'pip', 'install', '-r', str(requirements_file)
        ], capture_output=True, text=True)
        
        if result.returncode != 0:
            logger.error("โ ะัะธะฑะบะฐ ัััะฐะฝะพะฒะบะธ ะทะฐะฒะธัะธะผะพััะตะน:")
            logger.error(result.stderr)
            sys.exit(1)
            
        logger.info("โ ะะฐะฒะธัะธะผะพััะธ ัััะฐะฝะพะฒะปะตะฝั ััะฟะตัะฝะพ")
        
    except subprocess.CalledProcessError as e:
        logger.error(f"โ ะัะธะฑะบะฐ ะฟัะธ ัััะฐะฝะพะฒะบะต ะทะฐะฒะธัะธะผะพััะตะน: {e}")
        sys.exit(1)

def start_server():
    """ะะฐะฟััะบะฐะตะผ ัะตัะฒะตั"""
    logger.info("๐ ะะฐะฟััะบะฐะตะผ MPSYSTEM Backend ัะตัะฒะตั...")
    
    # ะะพะฑะฐะฒะปัะตะผ backend/src ะฒ PYTHONPATH
    backend_src = Path('backend/src').absolute()
    env = os.environ.copy()
    current_pythonpath = env.get('PYTHONPATH', '')
    if current_pythonpath:
        env['PYTHONPATH'] = f"{backend_src}{os.pathsep}{current_pythonpath}"
    else:
        env['PYTHONPATH'] = str(backend_src)
    
    # ะะตะฝัะตะผ ะดะธัะตะบัะพัะธั ะฝะฐ backend ะดะปั ะฟัะฐะฒะธะปัะฝัั ะฟััะตะน
    os.chdir('backend')
    
    try:
        # ะะฐะฟััะบะฐะตะผ ัะตัะฒะตั ัะตัะตะท run_server.py
        run_server_script = Path('run_server.py')
        if run_server_script.exists():
            logger.info("๐ ะัะฟะพะปัะทัะตะผ run_server.py")
            subprocess.run([sys.executable, 'run_server.py'], env=env)
        else:
            # ะะปััะตัะฝะฐัะธะฒะฝัะน ะทะฐะฟััะบ ะฝะฐะฟััะผัั ัะตัะตะท uvicorn
            logger.info("๐ ะะฐะฟััะบ ัะตัะตะท uvicorn")
            subprocess.run([
                sys.executable, '-m', 'uvicorn', 
                'app.main:app',
                '--host', '0.0.0.0',
                '--port', '8000',
                '--reload',
                '--reload-dir', 'src'
            ], env=env, cwd='src')
            
    except KeyboardInterrupt:
        logger.info("\n๐ ะกะตัะฒะตั ะพััะฐะฝะพะฒะปะตะฝ ะฟะพะปัะทะพะฒะฐัะตะปะตะผ")
    except Exception as e:
        logger.error(f"โ ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ ัะตัะฒะตัะฐ: {e}")
        sys.exit(1)

def main():
    """ะะปะฐะฒะฝะฐั ััะฝะบัะธั"""
    print_banner()
    
    logger.info("๐ ะัะพะฒะตััะตะผ ัะธััะตะผั...")
    check_python_version()
    check_backend_directory()
    
    logger.info("๐ฆ ะะฐัััะฐะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ...")
    install_dependencies()
    
    logger.info("๐ฏ ะัะต ะฟัะพะฒะตัะบะธ ะฟัะพะนะดะตะฝั! ะะฐะฟััะบะฐะตะผ ัะตัะฒะตั...")
    print("\n" + "="*60)
    print("๐ Backend ะฑัะดะตั ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://localhost:8000")
    print("๐ API ะดะพะบัะผะตะฝัะฐัะธั: http://localhost:8000/api/v1/docs")
    print("โค๏ธ Health check: http://localhost:8000/health")
    print("๐ DB ััะฐัะธััะธะบะฐ: http://localhost:8000/db-stats")
    print("="*60)
    print("๐ก ะะปั ะพััะฐะฝะพะฒะบะธ ัะตัะฒะตัะฐ ะฝะฐะถะผะธัะต Ctrl+C")
    print("="*60 + "\n")
    
    start_server()

if __name__ == "__main__":
    main()